name: tg_ch_aggregator

services:
  postgres:
    image: postgres:15-alpine
    restart: always
    env_file:
      - ../.env
    ports:
      - "5432:5432"
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data:cached
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    env_file:
      - ../.env
    entrypoint: ["/app/docker/scripts/backend_entrypoint.sh"]
    command: python main.py
    volumes:
      - ../src:/app/src:cached
      - ../logs:/app/logs:cached
      - ../sessions:/app/sessions:cached
      - ./.docker/.ipython:/root/.ipython:cached
    environment:
      PYTHONPATH: /app/src
      PYTHONUNBUFFERED: 1
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pgrep", "-x", "python"]
      interval: 30s
      timeout: 10s
      retries: 3

  create_sessions:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    env_file:
      - ../.env
    command: python create_tg_sessions.py
    volumes:
      - ../:/app:cached
    environment:
      PYTHONPATH: /app/src
      PYTHONUNBUFFERED: 1
    stdin_open: true
    tty: true

volumes:
  postgres_data:
    driver: local
