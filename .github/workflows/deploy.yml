name: Deploy TG Ch Aggregator

on:
  push:
    branches:
     - main
     - hotfix/*
     - test/docker-deploy  # TEMP: remove this line before merging to main
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        id: build
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Copy scripts to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_HOST_SSH_USER }}
          key: ${{ secrets.DEPLOY_HOST_SSH_KEY }}
          source: "docker/*.sh,docker/*.yml,docker/*.md"
          target: "/opt/tg_ch_aggregator/docker/"
          strip_components: 1

      - name: Make scripts executable
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_HOST_SSH_USER }}
          key: ${{ secrets.DEPLOY_HOST_SSH_KEY }}
          script: |
            cd /opt/tg_ch_aggregator/docker
            chmod +x *.sh

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_HOST_SSH_USER }}
          key: ${{ secrets.DEPLOY_HOST_SSH_KEY }}
          script: |
            # Create necessary directories
            mkdir -p /opt/tg_ch_aggregator/docker
            mkdir -p /opt/tg_ch_aggregator/logs
            mkdir -p /opt/tg_ch_aggregator/sessions
            mkdir -p /opt/tg_ch_aggregator/postgres_data
            
            # Stop existing containers
            cd /opt/tg_ch_aggregator
            docker-compose -f docker/docker-compose.prod.yml down || true
            
            # Pull latest image
            docker pull ${{ steps.build.outputs.metadata.image.name }}
            
            # Start services with docker-compose using environment variables
            docker-compose -f docker/docker-compose.prod.yml \
            -e POSTGRES_DB=${{ secrets.APP_POSTGRES_DB }} \
            -e POSTGRES_USER=${{ secrets.APP_POSTGRES_USER }} \
            -e POSTGRES_PASSWORD=${{ secrets.APP_POSTGRES_PASSWORD }} \
            -e POSTGRES_HOST=${{ secrets.APP_POSTGRES_HOST }} \
            -e POSTGRES_PORT=${{ secrets.APP_POSTGRES_PORT }} \
            -e TELEGRAM_API_ID=${{ secrets.APP_TELEGRAM_API_ID }} \
            -e TELEGRAM_API_HASH=${{ secrets.APP_TELEGRAM_API_HASH }} \
            -e TELEGRAM_BOT_TOKEN=${{ secrets.APP_TELEGRAM_BOT_TOKEN }} \
            -e BACKEND_IMAGE=${{ steps.build.outputs.metadata.image.name }} \
            up -d

  notify:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: always()
    steps:
      - name: Get short commit hash
        id: commit
        run: |
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          echo "short_sha=$SHORT_SHA" >> $GITHUB_OUTPUT
      
      - name: Send Telegram notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.GIT_ACTIONS_NOTIFICATIONS_TELEGRAM_CHAT_ID }}
          token: ${{ secrets.GIT_ACTIONS_NOTIFICATIONS_TELEGRAM_TOKEN }}
          format: markdown
          disable_web_page_preview: true
          message: |
            ${{ needs.build-and-deploy.result == 'success' && 'ðŸš€ Deploy successful!' || 'ðŸ’¥ Deploy failed!' }}
            
            **Repository:** [${{ github.repository }}](https://github.com/${{ github.repository }})
            **Branch:** [${{ github.ref_name }}](https://github.com/${{ github.repository }}/tree/${{ github.ref_name }})
            **Commit:** [${{ steps.commit.outputs.short_sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})

            [View Action Log](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
