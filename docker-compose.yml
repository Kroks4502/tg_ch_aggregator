version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data:cached
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command: >
      sh -c "yoyo apply --database postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB} &&
             cd src && 
             python main.py"
    volumes:
      - ./src:/app/src:cached
      - ./logs:/app/logs:cached
      - ./sessions:/app/sessions:cached
      - ./.docker/.ipython:/root/.ipython:cached
    environment:
      PYTHONPATH: /app/src
      PYTHONUNBUFFERED: 1
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  create_sessions:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command: python create_tg_sessions.py
    volumes:
      - ./sessions:/app/sessions:cached
    environment:
      PYTHONPATH: /app/src
      PYTHONUNBUFFERED: 1
    stdin_open: true
    tty: true

volumes:
  postgres_data:
    driver: local
